--
-- Autogenerated by Thrift
--
-- DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
-- @generated
--


require 'Thrift'
require 'rpc_constants'

ArgStruct = __TObject:new{
  argByte,
  argString,
  argI16,
  argI32,
  argI64,
  argDouble,
  argBool
}

function ArgStruct:read(iprot)
  iprot:readStructBegin()
  while true do
    local fname, ftype, fid = iprot:readFieldBegin()
    if ftype == TType.STOP then
      break
    elseif fid == 1 then
      if ftype == TType.BYTE then
        self.argByte = iprot:readByte()
      else
        iprot:skip(ftype)
      end
    elseif fid == 2 then
      if ftype == TType.STRING then
        self.argString = iprot:readString()
      else
        iprot:skip(ftype)
      end
    elseif fid == 3 then
      if ftype == TType.I16 then
        self.argI16 = iprot:readI16()
      else
        iprot:skip(ftype)
      end
    elseif fid == 4 then
      if ftype == TType.I32 then
        self.argI32 = iprot:readI32()
      else
        iprot:skip(ftype)
      end
    elseif fid == 5 then
      if ftype == TType.I64 then
        self.argI64 = iprot:readI64()
      else
        iprot:skip(ftype)
      end
    elseif fid == 6 then
      if ftype == TType.DOUBLE then
        self.argDouble = iprot:readDouble()
      else
        iprot:skip(ftype)
      end
    elseif fid == 7 then
      if ftype == TType.BOOL then
        self.argBool = iprot:readBool()
      else
        iprot:skip(ftype)
      end
    else
      iprot:skip(ftype)
    end
    iprot:readFieldEnd()
  end
  iprot:readStructEnd()
end

function ArgStruct:write(oprot)
  oprot:writeStructBegin('ArgStruct')
  if self.argByte then
    oprot:writeFieldBegin('argByte', TType.BYTE, 1)
    oprot:writeByte(self.argByte)
    oprot:writeFieldEnd()
  end
  if self.argString then
    oprot:writeFieldBegin('argString', TType.STRING, 2)
    oprot:writeString(self.argString)
    oprot:writeFieldEnd()
  end
  if self.argI16 then
    oprot:writeFieldBegin('argI16', TType.I16, 3)
    oprot:writeI16(self.argI16)
    oprot:writeFieldEnd()
  end
  if self.argI32 then
    oprot:writeFieldBegin('argI32', TType.I32, 4)
    oprot:writeI32(self.argI32)
    oprot:writeFieldEnd()
  end
  if self.argI64 then
    oprot:writeFieldBegin('argI64', TType.I64, 5)
    oprot:writeI64(self.argI64)
    oprot:writeFieldEnd()
  end
  if self.argDouble then
    oprot:writeFieldBegin('argDouble', TType.DOUBLE, 6)
    oprot:writeDouble(self.argDouble)
    oprot:writeFieldEnd()
  end
  if self.argBool then
    oprot:writeFieldBegin('argBool', TType.BOOL, 7)
    oprot:writeBool(self.argBool)
    oprot:writeFieldEnd()
  end
  oprot:writeFieldStop()
  oprot:writeStructEnd()
end